[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "renderers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "smart_str",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "DjangoUnicodeDecodeError",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_decode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "PasswordResetTokenGenerator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "Util",
        "importPath": "account.utils",
        "description": "account.utils",
        "isExtraImport": true,
        "detail": "account.utils",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "SendPasswordResetEmailView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "UserChangePasswordView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "UserLoginView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "UserProfileView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "UserRegistrationView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "UserPasswordResetView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "EmailMessage",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "SendPasswordResetEmailSerializer",
        "importPath": "account.serializers",
        "description": "account.serializers",
        "isExtraImport": true,
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "UserChangePasswordSerializer",
        "importPath": "account.serializers",
        "description": "account.serializers",
        "isExtraImport": true,
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializer",
        "importPath": "account.serializers",
        "description": "account.serializers",
        "isExtraImport": true,
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "UserPasswordResetSerializer",
        "importPath": "account.serializers",
        "description": "account.serializers",
        "isExtraImport": true,
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "UserProfileSerializer",
        "importPath": "account.serializers",
        "description": "account.serializers",
        "isExtraImport": true,
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializer",
        "importPath": "account.serializers",
        "description": "account.serializers",
        "isExtraImport": true,
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "UserRenderer",
        "importPath": "account.renderers",
        "description": "account.renderers",
        "isExtraImport": true,
        "detail": "account.renderers",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "dotenv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dotenv",
        "description": "dotenv",
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "djangoauthapi1.account.migrations.0001_initial",
        "description": "djangoauthapi1.account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('password', models.CharField(max_length=128, verbose_name='password')),",
        "detail": "djangoauthapi1.account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserModelAdmin",
        "kind": 6,
        "importPath": "djangoauthapi1.account.admin",
        "description": "djangoauthapi1.account.admin",
        "peekOfCode": "class UserModelAdmin(BaseUserAdmin):\n  # The fields to be used in displaying the User model.\n  # These override the definitions on the base UserModelAdmin\n  # that reference specific fields on auth.User.\n  list_display = ('id', 'email', 'name', 'tc', 'is_admin')\n  list_filter = ('is_admin',)\n  fieldsets = (\n      ('User Credentials', {'fields': ('email', 'password')}),\n      ('Personal info', {'fields': ('name', 'tc')}),\n      ('Permissions', {'fields': ('is_admin',)}),",
        "detail": "djangoauthapi1.account.admin",
        "documentation": {}
    },
    {
        "label": "AccountConfig",
        "kind": 6,
        "importPath": "djangoauthapi1.account.apps",
        "description": "djangoauthapi1.account.apps",
        "peekOfCode": "class AccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'account'",
        "detail": "djangoauthapi1.account.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "djangoauthapi1.account.models",
        "description": "djangoauthapi1.account.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n  def create_user(self, email, name, tc, password=None, password2=None):\n      \"\"\"\n      Creates and saves a User with the given email, name, tc and password.\n      \"\"\"\n      if not email:\n          raise ValueError('User must have an email address')\n      user = self.model(\n          email=self.normalize_email(email),\n          name=name,",
        "detail": "djangoauthapi1.account.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "djangoauthapi1.account.models",
        "description": "djangoauthapi1.account.models",
        "peekOfCode": "class User(AbstractBaseUser):\n  email = models.EmailField(\n      verbose_name='Email',\n      max_length=255,\n      unique=True,\n  )\n  name = models.CharField(max_length=200)\n  tc = models.BooleanField()\n  is_active = models.BooleanField(default=True)\n  is_admin = models.BooleanField(default=False)",
        "detail": "djangoauthapi1.account.models",
        "documentation": {}
    },
    {
        "label": "UserRenderer",
        "kind": 6,
        "importPath": "djangoauthapi1.account.renderers",
        "description": "djangoauthapi1.account.renderers",
        "peekOfCode": "class UserRenderer(renderers.JSONRenderer):\n  charset='utf-8'\n  def render(self, data, accepted_media_type=None, renderer_context=None):\n    response = ''\n    if 'ErrorDetail' in str(data):\n      response = json.dumps({'errors':data})\n    else:\n      response = json.dumps(data)\n    return response",
        "detail": "djangoauthapi1.account.renderers",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializer",
        "kind": 6,
        "importPath": "djangoauthapi1.account.serializers",
        "description": "djangoauthapi1.account.serializers",
        "peekOfCode": "class UserRegistrationSerializer(serializers.ModelSerializer):\n  # We are writing this becoz we need confirm password field in our Registratin Request\n  password2 = serializers.CharField(style={'input_type':'password'}, write_only=True)\n  class Meta:\n    model = User\n    fields=['email', 'name', 'password', 'password2', 'tc']\n    extra_kwargs={\n      'password':{'write_only':True}\n    }\n  # Validating Password and Confirm Password while Registration",
        "detail": "djangoauthapi1.account.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializer",
        "kind": 6,
        "importPath": "djangoauthapi1.account.serializers",
        "description": "djangoauthapi1.account.serializers",
        "peekOfCode": "class UserLoginSerializer(serializers.ModelSerializer):\n  email = serializers.EmailField(max_length=255)\n  class Meta:\n    model = User\n    fields = ['email', 'password']\nclass UserProfileSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = User\n    fields = ['id', 'email', 'name']\nclass UserChangePasswordSerializer(serializers.Serializer):",
        "detail": "djangoauthapi1.account.serializers",
        "documentation": {}
    },
    {
        "label": "UserProfileSerializer",
        "kind": 6,
        "importPath": "djangoauthapi1.account.serializers",
        "description": "djangoauthapi1.account.serializers",
        "peekOfCode": "class UserProfileSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = User\n    fields = ['id', 'email', 'name']\nclass UserChangePasswordSerializer(serializers.Serializer):\n  password = serializers.CharField(max_length=255, style={'input_type':'password'}, write_only=True)\n  password2 = serializers.CharField(max_length=255, style={'input_type':'password'}, write_only=True)\n  class Meta:\n    fields = ['password', 'password2']\n  def validate(self, attrs):",
        "detail": "djangoauthapi1.account.serializers",
        "documentation": {}
    },
    {
        "label": "UserChangePasswordSerializer",
        "kind": 6,
        "importPath": "djangoauthapi1.account.serializers",
        "description": "djangoauthapi1.account.serializers",
        "peekOfCode": "class UserChangePasswordSerializer(serializers.Serializer):\n  password = serializers.CharField(max_length=255, style={'input_type':'password'}, write_only=True)\n  password2 = serializers.CharField(max_length=255, style={'input_type':'password'}, write_only=True)\n  class Meta:\n    fields = ['password', 'password2']\n  def validate(self, attrs):\n    password = attrs.get('password')\n    password2 = attrs.get('password2')\n    user = self.context.get('user')\n    if password != password2:",
        "detail": "djangoauthapi1.account.serializers",
        "documentation": {}
    },
    {
        "label": "SendPasswordResetEmailSerializer",
        "kind": 6,
        "importPath": "djangoauthapi1.account.serializers",
        "description": "djangoauthapi1.account.serializers",
        "peekOfCode": "class SendPasswordResetEmailSerializer(serializers.Serializer):\n  email = serializers.EmailField(max_length=255)\n  class Meta:\n    fields = ['email']\n  def validate(self, attrs):\n    email = attrs.get('email')\n    if User.objects.filter(email=email).exists():\n      user = User.objects.get(email = email)\n      uid = urlsafe_base64_encode(force_bytes(user.id))\n      print('Encoded UID', uid)",
        "detail": "djangoauthapi1.account.serializers",
        "documentation": {}
    },
    {
        "label": "UserPasswordResetSerializer",
        "kind": 6,
        "importPath": "djangoauthapi1.account.serializers",
        "description": "djangoauthapi1.account.serializers",
        "peekOfCode": "class UserPasswordResetSerializer(serializers.Serializer):\n  password = serializers.CharField(max_length=255, style={'input_type':'password'}, write_only=True)\n  password2 = serializers.CharField(max_length=255, style={'input_type':'password'}, write_only=True)\n  class Meta:\n    fields = ['password', 'password2']\n  def validate(self, attrs):\n    try:\n      password = attrs.get('password')\n      password2 = attrs.get('password2')\n      uid = self.context.get('uid')",
        "detail": "djangoauthapi1.account.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "djangoauthapi1.account.urls",
        "description": "djangoauthapi1.account.urls",
        "peekOfCode": "urlpatterns = [\n    path('register/', UserRegistrationView.as_view(), name='register'),\n    path('login/', UserLoginView.as_view(), name='login'),\n    path('profile/', UserProfileView.as_view(), name='profile'),\n    path('changepassword/', UserChangePasswordView.as_view(), name='changepassword'),\n    path('send-reset-password-email/', SendPasswordResetEmailView.as_view(), name='send-reset-password-email'),\n    path('reset-password/<uid>/<token>/', UserPasswordResetView.as_view(), name='reset-password'),\n]",
        "detail": "djangoauthapi1.account.urls",
        "documentation": {}
    },
    {
        "label": "Util",
        "kind": 6,
        "importPath": "djangoauthapi1.account.utils",
        "description": "djangoauthapi1.account.utils",
        "peekOfCode": "class Util:\n  @staticmethod\n  def send_email(data):\n    email = EmailMessage(\n      subject=data['subject'],\n      body=data['body'],\n      from_email=os.environ.get('EMAIL_FROM'),\n      to=[data['to_email']]\n    )\n    email.send()",
        "detail": "djangoauthapi1.account.utils",
        "documentation": {}
    },
    {
        "label": "UserRegistrationView",
        "kind": 6,
        "importPath": "djangoauthapi1.account.views",
        "description": "djangoauthapi1.account.views",
        "peekOfCode": "class UserRegistrationView(APIView):\n  renderer_classes = [UserRenderer]\n  def post(self, request, format=None):\n    serializer = UserRegistrationSerializer(data=request.data)\n    serializer.is_valid(raise_exception=True)\n    user = serializer.save()\n    token = get_tokens_for_user(user)\n    return Response({'token':token, 'msg':'Registration Successful'}, status=status.HTTP_201_CREATED)\nclass UserLoginView(APIView):\n  renderer_classes = [UserRenderer]",
        "detail": "djangoauthapi1.account.views",
        "documentation": {}
    },
    {
        "label": "UserLoginView",
        "kind": 6,
        "importPath": "djangoauthapi1.account.views",
        "description": "djangoauthapi1.account.views",
        "peekOfCode": "class UserLoginView(APIView):\n  renderer_classes = [UserRenderer]\n  def post(self, request, format=None):\n    serializer = UserLoginSerializer(data=request.data)\n    serializer.is_valid(raise_exception=True)\n    email = serializer.data.get('email')\n    password = serializer.data.get('password')\n    user = authenticate(email=email, password=password)\n    if user is not None:\n      token = get_tokens_for_user(user)",
        "detail": "djangoauthapi1.account.views",
        "documentation": {}
    },
    {
        "label": "UserProfileView",
        "kind": 6,
        "importPath": "djangoauthapi1.account.views",
        "description": "djangoauthapi1.account.views",
        "peekOfCode": "class UserProfileView(APIView):\n  renderer_classes = [UserRenderer]\n  permission_classes = [IsAuthenticated]\n  def get(self, request, format=None):\n    serializer = UserProfileSerializer(request.user)\n    return Response(serializer.data, status=status.HTTP_200_OK)\nclass UserChangePasswordView(APIView):\n  renderer_classes = [UserRenderer]\n  permission_classes = [IsAuthenticated]\n  def post(self, request, format=None):",
        "detail": "djangoauthapi1.account.views",
        "documentation": {}
    },
    {
        "label": "UserChangePasswordView",
        "kind": 6,
        "importPath": "djangoauthapi1.account.views",
        "description": "djangoauthapi1.account.views",
        "peekOfCode": "class UserChangePasswordView(APIView):\n  renderer_classes = [UserRenderer]\n  permission_classes = [IsAuthenticated]\n  def post(self, request, format=None):\n    serializer = UserChangePasswordSerializer(data=request.data, context={'user':request.user})\n    serializer.is_valid(raise_exception=True)\n    return Response({'msg':'Password Changed Successfully'}, status=status.HTTP_200_OK)\nclass SendPasswordResetEmailView(APIView):\n  renderer_classes = [UserRenderer]\n  def post(self, request, format=None):",
        "detail": "djangoauthapi1.account.views",
        "documentation": {}
    },
    {
        "label": "SendPasswordResetEmailView",
        "kind": 6,
        "importPath": "djangoauthapi1.account.views",
        "description": "djangoauthapi1.account.views",
        "peekOfCode": "class SendPasswordResetEmailView(APIView):\n  renderer_classes = [UserRenderer]\n  def post(self, request, format=None):\n    serializer = SendPasswordResetEmailSerializer(data=request.data)\n    serializer.is_valid(raise_exception=True)\n    return Response({'msg':'Password Reset link send. Please check your Email'}, status=status.HTTP_200_OK)\nclass UserPasswordResetView(APIView):\n  renderer_classes = [UserRenderer]\n  def post(self, request, uid, token, format=None):\n    serializer = UserPasswordResetSerializer(data=request.data, context={'uid':uid, 'token':token})",
        "detail": "djangoauthapi1.account.views",
        "documentation": {}
    },
    {
        "label": "UserPasswordResetView",
        "kind": 6,
        "importPath": "djangoauthapi1.account.views",
        "description": "djangoauthapi1.account.views",
        "peekOfCode": "class UserPasswordResetView(APIView):\n  renderer_classes = [UserRenderer]\n  def post(self, request, uid, token, format=None):\n    serializer = UserPasswordResetSerializer(data=request.data, context={'uid':uid, 'token':token})\n    serializer.is_valid(raise_exception=True)\n    return Response({'msg':'Password Reset Successfully'}, status=status.HTTP_200_OK)",
        "detail": "djangoauthapi1.account.views",
        "documentation": {}
    },
    {
        "label": "get_tokens_for_user",
        "kind": 2,
        "importPath": "djangoauthapi1.account.views",
        "description": "djangoauthapi1.account.views",
        "peekOfCode": "def get_tokens_for_user(user):\n  refresh = RefreshToken.for_user(user)\n  return {\n      'refresh': str(refresh),\n      'access': str(refresh.access_token),\n  }\nclass UserRegistrationView(APIView):\n  renderer_classes = [UserRenderer]\n  def post(self, request, format=None):\n    serializer = UserRegistrationSerializer(data=request.data)",
        "detail": "djangoauthapi1.account.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.asgi",
        "description": "djangoauthapi1.djangoauthapi1.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "djangoauthapi1.djangoauthapi1.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-_zk=9yl=ul!po@_z-)wq&x4=&!(ons2(pogyu52+f7f37v3j$y'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-_zk=9yl=ul!po@_z-)wq&x4=&!(ons2(pogyu52+f7f37v3j$y'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',\n    'rest_framework',\n    'rest_framework_simplejwt',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "ROOT_URLCONF = 'djangoauthapi1.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "WSGI_APPLICATION = 'djangoauthapi1.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# JWT Configuration",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# JWT Configuration\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'account.User'",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'account.User'\n# Email Configuration",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'account.User'\n# Email Configuration\nEMAIL_BACKEND=\"django.core.mail.backends.smtp.EmailBackend\"",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'account.User'\n# Email Configuration\nEMAIL_BACKEND=\"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_HOST_USER = os.environ.get('EMAIL_USER')",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'account.User'\n# Email Configuration\nEMAIL_BACKEND=\"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_HOST_USER = os.environ.get('EMAIL_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')\nEMAIL_USE_TLS = True\n# JWT Settings",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'account.User'\n# Email Configuration\nEMAIL_BACKEND=\"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_HOST_USER = os.environ.get('EMAIL_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')\nEMAIL_USE_TLS = True\n# JWT Settings\nSIMPLE_JWT = {",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_HOST_USER = os.environ.get('EMAIL_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')\nEMAIL_USE_TLS = True\n# JWT Settings\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),\n    'AUTH_HEADER_TYPES': ('Bearer',),",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_HOST_USER = os.environ.get('EMAIL_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')\nEMAIL_USE_TLS = True\n# JWT Settings\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "EMAIL_HOST_USER = os.environ.get('EMAIL_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')\nEMAIL_USE_TLS = True\n# JWT Settings\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')\nEMAIL_USE_TLS = True\n# JWT Settings\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\n# JWT Settings\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',\n    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',\n    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',\n    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),\n    'TOKEN_TYPE_CLAIM': 'token_type',",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.settings",
        "description": "djangoauthapi1.djangoauthapi1.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n    \"http://127.0.0.1:3000\",\n]",
        "detail": "djangoauthapi1.djangoauthapi1.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.urls",
        "description": "djangoauthapi1.djangoauthapi1.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/user/', include('account.urls'))\n]",
        "detail": "djangoauthapi1.djangoauthapi1.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "djangoauthapi1.djangoauthapi1.wsgi",
        "description": "djangoauthapi1.djangoauthapi1.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "djangoauthapi1.djangoauthapi1.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "djangoauthapi1.manage",
        "description": "djangoauthapi1.manage",
        "peekOfCode": "def main():\n    dotenv.load_dotenv()\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'djangoauthapi1.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"",
        "detail": "djangoauthapi1.manage",
        "documentation": {}
    }
]